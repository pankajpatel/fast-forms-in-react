{"version":3,"sources":["utils/get-id.js","components/InputType/Text.js","components/InputType/Radio.js","components/InputType/Select.js","components/InputType/Checkbox.js","components/Input.js","FIELDS.js","components/Form.js","utils/serialize-formdata.js","App.js","index.js"],"names":["Date","now","Math","random","join","React","forwardRef","ref","registerField","props","useEffect","name","id","getId","htmlFor","label","options","refs","useRef","current","map","item","className","index","key","value","selected","Input","field","onChange","inputRef","Component","type","toLowerCase","TextInputRenderer","RadioInputRenderer","SelectInputRenderer","CheckboxInputRenderer","getRenderer","args","placeholder","pattern","required","min","max","step","validations","allFormValues","form","Boolean","includes","Form","inputWithError","fieldRefs","getField","Array","isArray","resetError","errorFieldKey","setCustomValidity","reportValidity","handleChange","customValidations","FIELDS","reduce","acc","onSubmit","e","preventDefault","checkValidity","formData","values","entries","push","serialize","FormData","error","isValid","Object","keys","validity","prevResult","validatorFn","valid","err","length","errField","App","href","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7e0f3744.chunk.js","sourcesContent":["export default () => ['input', +Date.now(), Math.random()].join('-')","import React, {Fragment, useEffect} from 'react'\nimport getId from '../../utils/get-id'\n\nexport default React.forwardRef(({registerField, ...props}, ref) => {\n  useEffect(() => {\n    registerField(props.name, ref);\n  }, [registerField, props.name, ref]);\n\n\tconst id = getId()\n\treturn (\n\t\t<Fragment>\n\t\t\t<label htmlFor={id}>{props.label}</label>\n\t\t\t<input id={id} {...props} ref={ref} />\n\t\t</Fragment>\n\t)\n})","import React, {Fragment, useRef, useEffect} from 'react'\nimport getId from '../../utils/get-id'\n\nexport default React.forwardRef(({options = [], label, registerField, ...props}, ref) => {\n  const refs = useRef([])\n  refs.current = options.map(item => useRef(null))\n  useEffect(() => {\n    registerField(props.name, refs)\n  }, [registerField, props.name])\n  return (\n    <Fragment>\n      <label>{label}</label>\n      <span className=\"flex-col\">\n        {options.map((item, index) => {\n          const id = getId()\n          return (\n            <span key={id}>\n              <input id={id} {...props} value={item.value} ref={refs.current[index]} />\n              <label htmlFor={id}>{item.label}</label>\n            </span>\n          )\n        })}\n      </span>\n    </Fragment>\n  )\n})","import React, {Fragment, useEffect} from 'react'\nimport getId from '../../utils/get-id'\n\nexport default React.forwardRef(({options, registerField, ...props}, ref) => {\n  useEffect(() => {\n    registerField(props.name, ref);\n  }, [registerField, props.name, ref]);\n\n  const id = getId()\n  return (\n    <Fragment>\n      <label htmlFor={id}>{props.label}</label>\n      <select ref={ref} {...props}>\n        {options.map(item => (\n          <option key={item.value} value={item.value} selected={item.selected}>\n            {item.label}\n          </option>\n        ))}\n      </select>\n    </Fragment>\n  )\n})","import React, {Fragment, useRef, useEffect} from 'react'\nimport getId from '../../utils/get-id'\n\nexport default React.forwardRef(({registerField, ...props}, ref) => {\n  const refs = useRef([])\n  refs.current = (props.options || []).map(item => useRef(null))\n  useEffect(() => {\n    registerField(props.name, props.options ? refs : ref);\n  }, [registerField, props.name, props.options, ref]);\n  const id = getId()\n  return (\n    <Fragment>\n      <label htmlFor={id}>{props.label}</label>\n      {props.options ? (\n        <span className=\"flex-col\">\n          {props.options.map((item, index) => {\n            const id = getId()\n            return (\n              <span key={id}>\n                <input id={id} {...props} value={item.value} ref={refs.current[index]} />\n                <label htmlFor={id}>{item.label}</label>\n              </span>\n            )\n          })}\n        </span>\n      ) : <input id={id} {...props} ref={ref} />}\n    </Fragment>\n  )\n})","import React, {useRef} from 'react'\nimport PropTypes from 'prop-types'\n\nimport TextInputRenderer from './InputType/Text'\nimport RadioInputRenderer from './InputType/Radio'\nimport SelectInputRenderer from './InputType/Select'\nimport CheckboxInputRenderer from './InputType/Checkbox'\n\nconst getRenderer = (type) => {\n  switch(type.toLowerCase()) {\n    case 'tel':\n    case 'url':\n    case 'text':\n    case 'date':\n    case 'time':\n    case 'file':\n    case 'week':\n    case 'month':\n    case 'image':\n    case 'email':\n    case 'color':\n    case 'range':\n    case 'number':\n    case 'search':\n    case 'password':\n      return TextInputRenderer\n    case 'radio': return RadioInputRenderer\n    case 'select': return SelectInputRenderer\n    case 'checkbox': return CheckboxInputRenderer\n    default: return 'div'\n  }\n}\n\nconst Input = ({\n  field = {},\n  onChange = () => {},\n  registerField = () => {},\n}) => {\n  const inputRef = useRef(null)\n\n  const Component = getRenderer(field.type)\n\n  return (\n    <div className=\"form-field\">\n      <Component\n        {...field}\n        ref={inputRef}\n        registerField={registerField}\n        onChange={(...args) => onChange(field.name, ...args)}\n      />\n    </div>\n  )\n}\n\nInput.propTypes = {\n  field: PropTypes.object.isRequired,\n  registerField: PropTypes.func,\n  onChange: PropTypes.func,\n}\n\nexport default Input\n","export default [\n  {\n    type: 'text', // input type\n    name: 'fullName', // Form input name\n    label: 'Full Name', // Label for Input\n    placeholder: 'John Doe', // Placeholder\n    pattern: '[A-Za-z\\\\s]{1,}',\n    required: true\n  },\n  {\n    type: 'date', // input type\n    name: 'dob', // Form input name\n    label: 'Date of Birth', // Label for Input\n    required: true\n  },\n  {\n    type: 'month', // input type\n    name: 'dobMonth', // Form input name\n    label: 'Month of Date of Birth', // Label for Input\n  },\n  {\n    type: 'week', // input type\n    name: 'dobWeek', // Form input name\n    label: 'Week of Date of Birth', // Label for Input\n  },\n  {\n    type: 'color', // input type\n    name: 'themeColor', // Form input name\n    label: 'Theme Color', // Label for Input\n  },\n  {\n    type: 'search', // input type\n    name: 'defaultQuery', // Form input name\n    label: 'Default Search Text', // Label for Input\n  },\n  {\n    type: 'time', // input type\n    name: 'wakeupTime', // Form input name\n    label: 'Wakeup Time', // Label for Input\n    required: true\n  },\n  {\n    type: 'range', // input type\n    name: 'workHours', // Form input name\n    label: 'Working Hours', // Label for Input\n    min: 0,\n    max: 24,\n    step: 1\n  },\n  {\n    type: 'number', // input type\n    name: 'workCapacity', // Form input name\n    label: 'Weekly Work Capacity', // Label for Input\n    required: true,\n    min: 10,\n    max: 8*7, // 9 hrs per day for 7 days of week\n    step: 4 // half day steps\n  },\n  {\n    type: 'file', // input type\n    name: 'profilePicture', // Form input name\n    label: 'Profile Picture', // Label for Input\n    required: true\n  },\n  {\n    type: 'radio',\n    name: 'gender',\n    label: 'Gender',\n    required: true,\n    options: [\n      {\n        label: 'Male',\n        value: 'M'\n      }, {\n        label: 'Female',\n        value: 'F'\n      }, {\n        label: 'Other',\n        value: 'O'\n      }, {\n        label: 'I\\'d rather not specify',\n        value: '-'\n      },\n    ]\n  },\n  {\n    type: 'checkbox',\n    name: 'foodChoices',\n    label: 'Food Choices',\n    options: [\n      {\n        label: 'Vegan',\n        value: 'V+'\n      }, {\n        label: 'Vegetarian',\n        value: 'V'\n      }, {\n        label: 'Non Vegetarian',\n        value: 'N'\n      }, {\n        label: 'I\\'d rather not specify',\n        value: '-'\n      },\n    ],\n    validations: [\n      (value, name, allFormValues, form) => ([\n        Boolean(allFormValues[name]),\n        `Please select atleast one of ${name}`\n      ]),\n      (value, name, allFormValues, form) => ([\n        ['V+', 'V', 'N', '-'].includes(value),\n        `Please select only from the provided choices for ${name}`\n      ])\n    ]\n  },\n  {\n    type: 'select',\n    name: 'primaryLanguage',\n    label: 'Primary Language',\n    required: true,\n    options: [\n      {\n        label: 'English (US)',\n        value: 'en_US'\n      }, {\n        label: 'English (UK)',\n        value: 'en_UK'\n      }, {\n        label: 'Deutsch',\n        value: 'de_DE'\n      }, {\n        label: 'French',\n        value: 'fr_FR'\n      }\n    ]\n  },\n  {\n    type: 'email',\n    name: 'email',\n    label: 'Your Email',\n    required: true\n  },\n  {\n    type: 'tel',\n    name: 'phoneNumber',\n    label: 'Your Phone Number',\n    required: false,\n    pattern: '[+0-9]{8,12}'\n  },\n  {\n    type: 'url',\n    name: 'homepage',\n    label: 'Your Website',\n    required: false\n  },\n  {\n    type: 'password',\n    name: 'password',\n    label: 'Your Password',\n    required: true\n  },\n  {\n    type: 'password',\n    name: 'confirmPassword',\n    label: 'Confirm Password',\n    required: true\n  },\n  {\n    type: 'checkbox',\n    name: 'terms',\n    label: '',\n    required: true,\n    options: [{\n      value: 'yes',\n      label: 'Terms and Conditions'\n    }]\n  }\n]","import React, {useRef} from 'react'\nimport Input from './Input'\nimport FIELDS from '../FIELDS'\nimport serialize from '../utils/serialize-formdata'\nimport './Form.css'\n\nexport default function Form() {\n  const form = useRef(null)\n  const inputWithError = useRef(null)\n\n  const fieldRefs = useRef({})\n\n  const registerField = (key, ref) => {\n    fieldRefs.current = {...fieldRefs.current, [key]: ref}\n  }\n  \n  const getField = (key) => {\n    return (\n      Array.isArray(fieldRefs.current[key].current)\n        ? fieldRefs.current[key].current[0]\n        : fieldRefs.current[key]\n    ).current\n  }\n\n  const resetError = (errorFieldKey) => {\n    if (errorFieldKey) {\n      const field = getField(errorFieldKey)\n      if (!field) {\n        return\n      }\n      field.setCustomValidity('');\n      field.reportValidity();\n    }\n  }\n\n  const handleChange = (key, ...args) => {\n    resetError(inputWithError.current)\n  }\n\n  const customValidations = FIELDS.reduce(\n    (acc, field) => field?.validations\n      ? {...acc, [field.name]: field.validations}\n      : acc\n    , {}\n  )\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (inputWithError.current) {\n      resetError(inputWithError.current)\n    }\n\n    if (!form.current.checkValidity()) {\n      return false;\n    }\n\n    const formData = serialize(new FormData(form.current))\n    \n    let error = null\n    // Check for custom validations\n    const isValid = Object.keys(customValidations).reduce((acc, key) => {\n      const validations = customValidations[key]\n      const validity = validations.reduce((prevResult, validatorFn) => {\n        // short circuit the validations if previous one has failed\n        if (!prevResult) {\n          return false\n        }\n        // previous one was valid, let's check for current validator and return the result\n        const [valid, err] = validatorFn(formData[key], key, formData, form.current)\n        if (!valid) {\n          error = err\n        }\n        return valid\n      }, true)\n\n      acc[key] = validity;\n      return acc;\n    }, {})\n    \n    if (Object.keys(isValid).length) {\n      const errField = Object.keys(isValid)[0]\n      inputWithError.current = errField\n      const field = getField(errField)\n      if (!field) {\n        return\n      }\n      field.setCustomValidity(error);\n      field.reportValidity();\n    }\n  }\n\n  return (\n    <form className=\"form\" ref={form} onSubmit={onSubmit}>\n      {FIELDS.map((field) => (\n        <Input\n          key={field.name}\n          field={field}\n          registerField={registerField}\n          onChange={handleChange}\n        />\n      ))}\n      <button type='submit'>Submit</button>\n    </form>\n  )\n}\n","export default formData => {\n  const values = {};\n  for (let [key, value] of formData.entries()) {\n    if (values[key]) {\n      if ( ! (values[key] instanceof Array) ) {\n        values[key] = new Array(values[key]);\n      }\n      values[key].push(value);\n    } else {\n      values[key] = value;\n    }\n  }\n  return values;\n}","import React from 'react'\nimport Form from './components/Form'\nimport './styles.css'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>React Fast Forms</h1>\n      <small>\n        Read <a href='https://time2hack.com/form-with-react-html5-validations/'>Building Fast Forms in React with HTML5 & Validations</a>\n        for detailed explanation\n      </small>\n      <hr />\n      <Form />\n    </div>\n  )\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}